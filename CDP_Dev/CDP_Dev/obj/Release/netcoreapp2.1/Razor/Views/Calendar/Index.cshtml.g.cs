#pragma checksum "E:\MBH\Projects\CDP_Dev\CDP_Dev\Views\Calendar\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "189a19fba48b41b4ca86c5519241801cf7abfbf3"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Calendar_Index), @"mvc.1.0.view", @"/Views/Calendar/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Calendar/Index.cshtml", typeof(AspNetCore.Views_Calendar_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "E:\MBH\Projects\CDP_Dev\CDP_Dev\Views\_ViewImports.cshtml"
using CDP_Dev;

#line default
#line hidden
#line 2 "E:\MBH\Projects\CDP_Dev\CDP_Dev\Views\_ViewImports.cshtml"
using CDP_Dev.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"189a19fba48b41b4ca86c5519241801cf7abfbf3", @"/Views/Calendar/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"aaadf07ab9ea935f4720c4961260af0f372c3d8e", @"/Views/_ViewImports.cshtml")]
    public class Views_Calendar_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/bootstrap-year-calendar.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/jquery.datetimepicker.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("PresenterId"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-control"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("TrainingId"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "E:\MBH\Projects\CDP_Dev\CDP_Dev\Views\Calendar\Index.cshtml"
  
    ViewData["Title"] = "Calendar";

#line default
#line hidden
            BeginContext(44, 70, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "a2e5998abc21430f92f67be4a2f10a44", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(114, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(258, 68, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "a46bf0fb8f314ca697136d67a2cc0d2d", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(326, 18857, true);
            WriteLiteral(@"

<script src=""https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js""></script>

<script type=""text/javascript"">
    $(document).ready(function () {
        $(""#TrainingId"").change(function () {
            var Id = $(""#TrainingId"").val();
            LoadUserData(Id);
        });

        function LoadUserData(Id) {
            $.ajax({
                url: ""/User/LoadUsersForTraining/"" + Id,
                cache: false,
                type: ""POST"",
                success: function (data) {
                    var markup = """";
                    for (var x = 0; x < data.data.length; x++) {
                        markup += ""<option value="" + data.data[x].Id + "">"" + data.data[x].Name + ""</option>"";
                    }
                    $(""#AttendeeId"").html(markup).show();
                },
                error: function (reponse) {
                    alert(""error : "" + reponse);
                }
            });
        }

        $('#datetimepicker').datet");
            WriteLiteral(@"imepicker();

        function editEvent(event) {
            $('#event-modal input[name=""event-index""]').val(event ? event.trainingid : '');
            $('#event-modal input[name=""event-name""]').val(event ? event.name : '');
            $('#event-modal input[name=""event-description""]').val(event ? event.description : '');
            //$('#event-modal input[name=""event-start-date""]').datetimepicker('update', event ? event.startDate : '');
            //$('#event-modal input[name=""event-end-date""]').datetimepicker('update', event ? event.endDate : '');

            //$('#datetimepicker6').data(""DateTimePicker"").date(new Date('05/05/2020'));
            //$('#datetimepicker7').data(""DateTimePicker"").date(event.endDate);

            //working
            //$('#datetimepicker6').data(""DateTimePicker"").date('1/4/2020 14:23:12');

            $('#datetimepicker6').data(""DateTimePicker"").date(event.startDate.getFullYear() + ""-"" + (event.startDate.getMonth() + 1) + ""-"" + event.startDate.getDate() + ");
            WriteLiteral(@""" "" + event.startTime);

            //Working
            //$('#datetimepicker6').data(""DateTimePicker"").date(event.startDate);
            //$('#datetimepicker7').data(""DateTimePicker"").date(event.endDate);

            $('#event-modal').modal();
        }

        function deleteEvent(event) {
            var dataSource = $('#calendar').data('calendar').getDataSource();

            for (var i in dataSource) {
                if (dataSource[i].id == event.id) {
                    dataSource.splice(i, 1);
                    break;
                }
            }

            $('#calendar').data('calendar').setDataSource(dataSource);
        }

        function attendanceEvent(event) {
            $('#event-modal-attendance input[name=""event-calendar-attendance""]').val(event ? event.Id : '');
            $('#event-modal-attendance input[name=""event-presenter-attendance""]').val(event ? event.presenter : '');
            $('#event-modal-attendance input[name=""event-training-attendanc");
            WriteLiteral(@"e""]').val(event ? event.name : '');
            $('#event-modal-attendance input[name=""event-startdate-attendance""]').val(event ? event.startDate.getFullYear() + ""-"" + (event.startDate.getMonth() + 1) + ""-"" + event.startDate.getDate() + "" "" + event.startTime : '');

            var markup = """";
            for (var x = 0; x < event.attendees.length; x++) {
                markup += ""<option value="" + event.attendees[x].attendeeid + "" "" + ((event.attendees[x].attended == 'True') ? ""selected"" : """") + "">"" + event.attendees[x].attendee + ""</option>"";
            }
            $(""#AttendenceAttendeeId"").html(markup).show();
            $(""#AttendenceAttendeeId"").focus();
            $('#event-modal-attendance').modal();
        }

        function saveEvent() {
            $('#error').show();
            if ($(""#AttendeeId"").val().length == 0) {
                $(""#error"").text('Please Select Attendee');
                return;
            }
            if ($(""#Duration"").val().length == 0) {
  ");
            WriteLiteral(@"              $(""#error"").text('Please provide Duration in Hours');
                return;
            }
            $('#error').hide();
            var event = {
                id: $('#event-modal input[name=""event-index""]').val(),
                name: $('#event-modal input[name=""event-name""]').val(),
                location: $('#event-modal input[name=""event-location""]').val(),
                startDate: $('#event-modal input[name=""event-start-date""]').datetimepicker('getDate'),
                endDate: $('#event-modal input[name=""event-end-date""]').datetimepicker('getDate')
            }

            var stratdatestr = new Date($(""#datetimepicker6"").data(""DateTimePicker"").date()),
                startformatted = stratdatestr.getFullYear() + ""-"" + (stratdatestr.getMonth() + 1) + ""-"" + stratdatestr.getDate() + "" "" + stratdatestr.getHours() + "":"" + stratdatestr.getMinutes() + "":"" + stratdatestr.getSeconds();

            //var enddatestr = new Date($(""#datetimepicker7"").data(""DateTimePicke");
            WriteLiteral(@"r"").date()),
            //    endformatted = enddatestr.getFullYear() + ""-"" + (enddatestr.getMonth() + 1) + ""-"" + enddatestr.getDate() + "" "" + enddatestr.getHours() + "":"" + enddatestr.getMinutes() + "":"" + enddatestr.getSeconds();

            var optVal = [];
            var tempVal = [];
            $(""#AttendeeId"").each(function () {
                var val = $(this).val();
                var tempVal = $(""#AttendeeId"").val();

                if (tempVal.indexOf(val) >= 0 && optVal.indexOf(val) < 0) {
                    optVal.push(val);
                } else if (tempVal.indexOf(val) < 0 && optVal.indexOf(val) >= 0) {
                    optVal.splice(optVal.indexOf(val), 1);
                }
            });

            $.ajax({
                type: 'POST',
                url: ""/Calendar/PostDataJson"",
                data: JSON.stringify({ StartDate: stratdatestr, StartDatestr: startformatted, Duration: $('#Duration').val(), Description: $('#Description').val(), PresenterId: $('#");
            WriteLiteral(@"PresenterId').val(), TrainingId: $('#TrainingId').val(), Attendees: $('#AttendeeId').val() }),
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data.success) {
                        LoadCalendarData()
                    }
                },
                error: function () {
                    alert(""error"");
                }
            });

            //$.ajax({
            //    type: 'POST',
            //    url: ""/Calendar/PostDataJson"",
            //    data: JSON.stringify({ StartDate: stratdatestr, StartDatestr: startformatted, EndDate: enddatestr, EndDatestr: endformatted, Description: $('#Description').val(), PresenterId: $('#PresenterId').val(), TrainingId: $('#TrainingId').val(), Attendees: $('#AttendeeId').val() }),
            //    contentType: 'application/json; charset=utf-8',
            //    success: function (data) {
            //        if (data.success) {
            //       ");
            WriteLiteral(@"     LoadCalendarData()
            //        }
            //    },
            //    error: function () {
            //        alert(""error"");
            //    }
            //});

            //var dataSource = $('#calendar').data('calendar').getDataSource();

            //if (event.id) {
            //    for (var i in dataSource) {
            //        if (dataSource[i].id == event.id) {
            //            dataSource[i].name = event.name;
            //            dataSource[i].location = event.location;
            //            dataSource[i].startDate = event.startDate;
            //            dataSource[i].endDate = event.endDate;
            //        }
            //    }
            //}
            //else {
            //    var newId = 0;
            //    for (var i in dataSource) {
            //        if (dataSource[i].id > newId) {
            //            newId = dataSource[i].id;
            //        }
            //    }

            //    newId++");
            WriteLiteral(@";
            //    event.id = newId;

            //    dataSource.push(event);
            //}

            //$('#calendar').data('calendar').setDataSource(dataSource);

            $('#event-modal').modal('hide');
        }

        function markAttendanceEvent() {

            var optVal = [];
            var tempVal = [];
            $(""#AttendeeId"").each(function () {
                var val = $(this).val();
                var tempVal = $(""#AttendenceAttendeeId"").val();

                if (tempVal.indexOf(val) >= 0 && optVal.indexOf(val) < 0) {
                    optVal.push(val);
                } else if (tempVal.indexOf(val) < 0 && optVal.indexOf(val) >= 0) {
                    optVal.splice(optVal.indexOf(val), 1);
                }
            });

            $.ajax({
                type: 'POST',
                url: ""/Calendar/PostAttendanceDataJson"",
                data: JSON.stringify({ CalendarId: $('#AttendanceCalendarId').val(), Attendees: $('#AttendenceAtt");
            WriteLiteral(@"endeeId').val() }),
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data.success) {
                        LoadCalendarData();
                    }
                },
                error: function () {
                    alert(""error"");
                }
            });

            $('#event-modal-attendance').modal('hide');
        }

        $(function () {
            LoadUserData($(""#TrainingId"").val());

            var currentYear = new Date().getFullYear();

            $('#save-event').click(function () {
                saveEvent();
            });

            $('#attendance-event').click(function () {
                markAttendanceEvent();
            });

            $('#datetimepicker6').datetimepicker({
                format: 'YYYY-MM-DD HH:mm'
            });

            //$('#datetimepicker7').datetimepicker({
            //    useCurrent: false //Important! See issue #10");
            WriteLiteral(@"75
            //});

            $(""#datetimepicker6"").on(""dp.change"", function (e) {
                //$('#datetimepicker7').data(""DateTimePicker"").minDate(e.date);
            });
            //$(""#datetimepicker7"").on(""dp.change"", function (e) {
            //    $('#datetimepicker6').data(""DateTimePicker"").maxDate(e.date);
            //});

            $.ajax({
                url: '/Calendar/LoadCalendar'
            }).done(function (data) {
                //data: data.caldata
                var calendarData = JSON.parse(data.caldata);
                var fulldata = [];
                //var calendarData = (data.caldata);
                for (var i = 0; i < calendarData.length; i++) {
                    calendarData[i].startDate = new Date(calendarData[i].startDate);
                    calendarData[i].endDate = new Date(calendarData[i].endDate);
                    var d = """";
                }
                $('#calendar').calendar({
                    enableContextMenu: ");
            WriteLiteral(@"true,
                    enableRangeSelection: true,
                    contextMenuItems: [
                        {
                            text: 'Update',
                            click: editEvent
                        },
                        {
                            text: 'Delete',
                            click: deleteEvent
                        },
                        {
                            text: 'Attendance',
                            click: attendanceEvent
                        }
                    ],
                    selectRange: function (e) {
                        editEvent({ startDate: e.startDate, endDate: e.endDate });
                    },
                    //clickDay: function(e) {
                    //alert('Click on day ' + e.date.toString());
                    //},
                    mouseOnDay: function (e) {
                        if (e.events.length > 0) {
                            var content = '';

        ");
            WriteLiteral(@"                    for (var i in e.events) {
                                var attendees = '';
                                for (var j in e.events[i].attendees) {
                                    attendees += e.events[i].attendees[j].attendee + ', ';
                                }
                                content += '<div class=""event-tooltip-content"">'
                                    + '<div class=""event-name"" style=""color:' + e.events[i].color + '"">' + e.events[i].name + '</div>'
                                    + '<div class=""event-presenter"" style=""color:red"">' + e.events[i].presenter + '</div>'
                                    + '<div class=""event-attendee"" style=""color:green"">' + attendees + '</div>'
                                    + '<div class=""event-starttime"">' + e.events[i].startTime + '</div>'
                                    + '</div>';
                            }

                            $(e.element).popover({
                              ");
            WriteLiteral(@"  trigger: 'manual',
                                container: 'body',
                                html: true,
                                content: content
                            });

                            $(e.element).popover('show');
                        }
                    },
                    mouseOutDay: function (e) {
                        if (e.events.length > 0) {
                            $(e.element).popover('hide');
                        }
                    },
                    dayContextMenu: function (e) {
                        $(e.element).popover('hide');
                    },
                    //dataSource: [{ ""Id"": ""10"", ""startDate"": new Date('2020-01-01'), ""endDate"": new Date('2020-01-01'), ""name"": ""Onboarding Training - Complete"", ""presenter"": ""Subeesh Charoth"", ""attendee"": ""Mayank Bhardwaj,Abhishek Nayagam,Manivannan Ganapathy,"" }],
                    //dataSource: [{""Id"":""10"",""startDate"": ""2020-01-01T00:00:00Z"",""endDate"": ""2020-");
            WriteLiteral(@"01-01T00:00:00Z"",""startTime"": ""10:51"",""name"": ""Onboarding Training - Complete"",""presenter"": ""Subeesh Charoth"",""attendee"":""Mayank Bhardwaj""}],
                    //dataSource: JSON.parse(data.caldata),
                    //dataSource: [{""Id"":""10"",""startDate"": ""2020/01/07T18:25:43.511Z"",""endDate"": ""2020-01-07T18:25:43.511Z"",""startTime"": ""10:51"",""name"": ""Onboarding Training - Complete"",""presenter"": ""Subeesh Charoth"",""attendee"":""Mayank Bhardwaj, Abhishek Nayagam, Manivannan Ganapathy,""}],
                    dataSource: calendarData
                });
            });
        });

        function LoadCalendarData() {
            $.ajax({
                url: '/Calendar/LoadCalendar'
            }).done(function (data) {
                var calendarData = JSON.parse(data.caldata);
                var fulldata = [];
                for (var i = 0; i < calendarData.length; i++) {
                    calendarData[i].startDate = new Date(calendarData[i].startDate);
                    calendarData[i");
            WriteLiteral(@"].endDate = new Date(calendarData[i].endDate);
                    var d = """";
                }
                $('#calendar').calendar({
                    enableContextMenu: true,
                    enableRangeSelection: true,
                    contextMenuItems: [
                        {
                            text: 'Update',
                            click: editEvent
                        },
                        {
                            text: 'Delete',
                            click: deleteEvent
                        },
                        {
                            text: 'Attendance',
                            click: attendanceEvent
                        }
                    ],
                    selectRange: function (e) {
                        editEvent({ startDate: e.startDate, endDate: e.endDate });
                    },
                    mouseOnDay: function (e) {
                        if (e.events.length > 0) {
               ");
            WriteLiteral(@"             var content = '';

                            for (var i in e.events) {
                                var attendees = '';
                                for (var j in e.events[i].attendees) {
                                    attendees += e.events[i].attendees[j].attendee + ', ';
                                }
                                content += '<div class=""event-tooltip-content"">'
                                    + '<div class=""event-name"" style=""color:' + e.events[i].color + '"">' + e.events[i].name + '</div>'
                                    + '<div class=""event-presenter"" style=""color:red"">' + e.events[i].presenter + '</div>'
                                    + '<div class=""event-attendee"" style=""color:green"">' + attendees + '</div>'
                                    + '<div class=""event-starttime"">' + e.events[i].startTime + '</div>'
                                    + '</div>';
                            }

                            $(e.element)");
            WriteLiteral(@".popover({
                                trigger: 'manual',
                                container: 'body',
                                html: true,
                                content: content
                            });

                            $(e.element).popover('show');
                        }
                    },
                    mouseOutDay: function (e) {
                        if (e.events.length > 0) {
                            $(e.element).popover('hide');
                        }
                    },
                    dayContextMenu: function (e) {
                        $(e.element).popover('hide');
                    },
                    dataSource: calendarData
                });
            });
        }
    });
</script>
<h2>Yearly Training Calendar</h2>
<div id=""calendar"" class=""calendar"">

</div>
<div class=""modal modal-fade in"" id=""event-modal"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">
       ");
            WriteLiteral(@"     <div class=""modal-header"">
                <button type=""button"" class=""close"" data-dismiss=""modal""><span aria-hidden=""true"">×</span><span class=""sr-only"">Close</span></button>
                <h4 class=""modal-title"">
                    Setup Meeting
                </h4>
            </div>
            <div class=""modal-body"">
                <input type=""hidden"" name=""event-index"" value="""">
                ");
            EndContext();
            BeginContext(19183, 3807, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a5afdff2aee2450da24ec99ee9c3ae45", async() => {
                BeginContext(19213, 205, true);
                WriteLiteral("\r\n                    <div class=\"form-group\">\r\n                        <label class=\"col-sm-4 control-label\">Presenter</label>\r\n                        <div class=\"col-sm-7\">\r\n                            ");
                EndContext();
                BeginContext(19418, 125, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8f99cdcc3874433ca19ce6823c1a5c07", async() => {
                    BeginContext(19533, 1, true);
                    WriteLiteral(" ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
#line 418 "E:\MBH\Projects\CDP_Dev\CDP_Dev\Views\Calendar\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = (new SelectList(@ViewBag.UserList,"Id", "DisplayName"));

#line default
#line hidden
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(19543, 264, true);
                WriteLiteral(@"
                        </div>
                    </div>
                    <div class=""form-group"">
                        <label class=""col-sm-4 control-label"">Training</label>
                        <div class=""col-sm-7"">
                            ");
                EndContext();
                BeginContext(19807, 121, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b1471cb5e81c49bbbe14b7fc93ce1beb", async() => {
                    BeginContext(19918, 1, true);
                    WriteLiteral(" ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
#line 424 "E:\MBH\Projects\CDP_Dev\CDP_Dev\Views\Calendar\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = (new SelectList(@ViewBag.TrainingList,"Id", "Name"));

#line default
#line hidden
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(19928, 742, true);
                WriteLiteral(@"
                        </div>
                    </div>
                    <div class=""form-group"">
                        <label class=""col-sm-4 control-label"">Attendees</label>
                        <div class=""col-sm-7"">
                            <select id=""AttendeeId"" multiple class=""form-control""> </select>
                        </div>
                    </div>
                    <div class=""form-group"">
                        <label class=""col-sm-4 control-label"">Description</label>
                        <div class=""col-sm-7"">
                            <input name=""event-description"" id=""Description"" type=""text"" class=""form-control"">
                        </div>
                    </div>

");
                EndContext();
                BeginContext(21912, 1071, true);
                WriteLiteral(@"
                    <div class=""form-group"">
                        <label class=""col-sm-4 control-label"">Date Time</label>
                        <div class=""col-sm-7 input-group date"" id='datetimepicker6'>
                            <input type='text' class=""form-control"" />
                            <span class=""input-group-addon"">
                                <span class=""glyphicon glyphicon-calendar""></span>
                            </span>
                        </div>
                    </div>
                    <div class=""form-group"">
                        <label class=""col-sm-4 control-label"">Duration in Hours</label>
                        <div class=""col-sm-7"">
                            <input id=""Duration"" class=""form-control"" type=""number"" value=""1"" />
                        </div>
                    </div>
                    <div class=""form-group"" style=""color:red"">
                        <div class=""col-sm-7"" id=""error"" >
                        </div");
                WriteLiteral(">\r\n                    </div>\r\n                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(22990, 919, true);
            WriteLiteral(@"
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-default"" data-dismiss=""modal"">Cancel</button>
                <button type=""button"" class=""btn btn-primary"" id=""save-event"">
                    Save
                </button>
            </div>
        </div>
    </div>
</div>

<div class=""modal modal-fade in"" id=""event-modal-attendance"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <button type=""button"" class=""close"" data-dismiss=""modal""><span aria-hidden=""true"">×</span><span class=""sr-only"">Close</span></button>
                <h4 class=""modal-title"">
                    Mark Attendance
                </h4>
            </div>
            <div class=""modal-body"">
                <input type=""hidden"" name=""event-index"" value="""">
                ");
            EndContext();
            BeginContext(23909, 1848, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "27f9b8a09bdc46ae9a9e930a0f965e7c", async() => {
                BeginContext(23939, 1811, true);
                WriteLiteral(@"
                    <div class=""form-group"" style=""visibility:hidden"">
                        <div class=""col-sm-7"">
                            <input name=""event-calendar-attendance"" id=""AttendanceCalendarId"" type=""text"" class=""form-control"" readonly>
                        </div>
                    </div>
                    <div class=""form-group"">
                        <label class=""col-sm-4 control-label"">Presenter</label>
                        <div class=""col-sm-7"">
                            <input name=""event-presenter-attendance"" id=""AttendancePresenterId"" type=""text"" class=""form-control"" readonly>
                        </div>
                    </div>
                    <div class=""form-group"">
                        <label class=""col-sm-4 control-label"">Training</label>
                        <div class=""col-sm-7"">
                            <input name=""event-training-attendance"" id=""AttendanceTrainingId"" type=""text"" class=""form-control"" readonly>
                 ");
                WriteLiteral(@"       </div>
                    </div>
                    <div class=""form-group"">
                        <label class=""col-sm-4 control-label"">Start Date</label>
                        <div class=""col-sm-7"">
                            <input name=""event-startdate-attendance"" id=""AttendanceStartDate"" type=""text"" class=""form-control"" readonly>
                        </div>
                    </div>
                    <div class=""form-group"">
                        <label class=""col-sm-4 control-label"">Select Present Attendees</label>
                        <div class=""col-sm-7"">
                            <select id=""AttendenceAttendeeId"" multiple class=""form-control""> </select>
                        </div>
                    </div>
                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(25757, 368, true);
            WriteLiteral(@"
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-default"" data-dismiss=""modal"">Cancel</button>
                <button type=""button"" class=""btn btn-primary"" id=""attendance-event"">
                    Mark Attendance
                </button>
            </div>
        </div>
    </div>
</div>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
